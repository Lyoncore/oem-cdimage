#!/usr/bin/python3

import os
import sys
import apt

linux_package = [
"block-modules",
"crypto-modules",
"dasd-extra-modules",
"dasd-modules",
"fat-modules",
"fb-modules",
"firewire-core-modules",
"floppy-modules",
"fs-core-modules",
"fs-secondary-modules",
"input-modules",
"ipmi-modules",
"irda-modules",
"kernel-image",
"linux-cloud-tools",
"linux-cloud-tools-common",
"linux-doc",
"linux-headers",
"linux-image",
"linux-image-extra",
"linux-libc-dev",
"linux-source",
"linux-tools",
"linux-tools-common",
"linux-udebs-generic",
"linux-udebs-generic-lpae",
"md-modules",
"message-modules",
"mouse-modules",
"multipath-modules",
"nfs-modules",
"nic-modules",
"nic-pcmcia-modules",
"nic-shared-modules",
"nic-usb-modules",
"parport-modules",
"pata-modules",
"pcmcia-modules",
"pcmcia-storage-modules",
"plip-modules",
"ppp-modules",
"sata-modules",
"scsi-modules",
"serial-modules",
"storage-core-modules",
"usb-modules",
"virtio-modules",
"vlan-modules",
"kernel-signed-image",
"linux-signed-image"
]

pkg_dicts = {}

with open('xenial-classic-arch.list', 'r', encoding='UTF-8') as input:
    for line in input:
        temp = line[:-1]
        package = temp.split('*')
        arch = package[1]
        pkg_dicts[package[0]] = arch[1:-4]

#print(pkg_dicts)

with open('xenial-classic-apt.list', 'w') as out:
    with open('xenial-classic-pkgname.list', 'r', encoding='UTF-8') as file:
        for line in file:
            cache = apt.Cache()
            temp = line[:-1]
            try:
                pkg_name = temp
                apt_pkg = cache[pkg_name]
                ver = apt_pkg.candidate
                pkg_info = str(ver).split('=')
                if ":" not in pkg_info[1]:
                    pkg_file = pkg_name + '_' + pkg_info[1] + '_' + pkg_dicts[pkg_name] +".deb" 
                else:
                    pkg_file = pkg_name + '_' + pkg_info[1].split(':')[1] + '_' + pkg_dicts[pkg_name] +".deb"
                out.write(pkg_file + '\n')
            except KeyError as err:
                print("KeyError %s" % format(err))
                if pkg_name == "linux-headers-4.4.0-": 
                    pkg_file = pkg_name + "*_all.deb"
                    print(pkg_file)
                    out.write(pkg_file + '\n')
                elif pkg_name == "linux-headers-4.4.0-*-generic" or \
                     pkg_name == "linux-image-4.4.0-*-generic" or pkg_name == "linux-image-extra-4.4.0-*-generic" or \
                     pkg_name == "linux-signed-image-4.4.0-*-generic":
                    pkg_file = pkg_name + "*_amd64.deb"
                    print(pkg_file)
                    out.write(pkg_file + '\n')
                else:
                    out.write(line)
