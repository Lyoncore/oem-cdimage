#! /bin/sh
set -e

# Publishing a release is a bit more complicated than publishing a daily. We
# have two trees: simple and full. The simple tree is intended for smaller
# mirrors and for ease of use by naÃ¯ve end users. It contains a pool of
# images (hardlinks into the full tree) and a tree per release of symlinks
# into that pool with filenames that include the status of the image (e.g.
# preview, sounder9, release).
#
# The full tree contains everything, and has a more complicated structure
# that ordinary users ultimately shouldn't have to pay too much attention
# to.
#
# Releases are always published based on a daily build. Nominate the version
# number.

CDIMAGE_ROOT=/srv/cdimage.no-name-yet.com
TRACKER=http://torrent.ubuntu.com:6969/announce

DIST="${DIST:-warty}"
ARCHES="${ARCHES:-amd64 i386 powerpc}"

if [ -z "$1" ]; then
	echo 'Usage: publish-release DAILY-DATE [STATUS]' >&2
	exit 1
fi

DATE="$1"
STATUS="$2"

DAILY="$CDIMAGE_ROOT/www/full/daily/$DATE"
RELEASE_FULL="$CDIMAGE_ROOT/www/full/releases/$DIST/${STATUS:-release}"
RELEASE_SIMPLE_POOL="$CDIMAGE_ROOT/www/simple/.pool"
RELEASE_SIMPLE_DIST="$CDIMAGE_ROOT/www/simple/$DIST"

# Sanity-check. There may be a live CD as well, but it's not yet required.
for arch in $ARCHES; do
	if [ ! -e "$DAILY/$DIST-install-$arch.iso" ]; then
		echo "No daily for $DIST $arch on $DATE!" >&2
		exit 1
	fi
done

mkdir -p "$RELEASE_FULL"
mkdir -p "$RELEASE_SIMPLE_POOL"
mkdir -p "$RELEASE_SIMPLE_DIST"
find "$RELEASE_SIMPLE_DIST/" -type l -print0 | xargs -0r rm -f

echo "Constructing release trees ..."

for arch in $ARCHES; do
	echo "Copying CDs for $arch ..."
	for cdtype in install live; do
		baseplain="$DIST-$cdtype-$arch"
		basestatus="$DIST-${STATUS:+$STATUS-}$cdtype-$arch"

		if [ ! -e "$DAILY/$baseplain.iso" ]; then
			continue
		fi

		# Copy, to make sure we have a canonical version of this.
		cp -a "$DAILY/$baseplain.iso" "$RELEASE_FULL/$baseplain.iso"
		ln -f "$RELEASE_FULL/$baseplain.iso" \
		      "$RELEASE_SIMPLE_POOL/$baseplain.iso"
		ln -s "../.pool/$baseplain.iso" \
		      "$RELEASE_SIMPLE_DIST/$basestatus.iso"
	done

	baseplain="$DIST-install-$arch"
	basestatus="$DIST-${STATUS:+$STATUS-}install-$arch"

	for ext in list template jigdo iso.torrent; do
		# Copy, to make sure we have a canonical version of this.
		cp -a "$DAILY/$baseplain.$ext" "$RELEASE_FULL/$baseplain.$ext"
		ln -f "$RELEASE_FULL/$baseplain.$ext" \
		      "$RELEASE_SIMPLE_POOL/$baseplain.$ext"
	done

	for ext in list template; do
		ln -s "../.pool/$baseplain.$ext" \
		      "$RELEASE_SIMPLE_DIST/$basestatus.$ext"
	done

	echo "Fixing Jigdo files for $arch ..."
	sed "s/=$baseplain/=$basestatus/g" \
		< "$RELEASE_SIMPLE_POOL/$baseplain.jigdo" \
		> "$RELEASE_SIMPLE_DIST/$basestatus.jigdo"

	echo "Creating torrents for $arch ..."
	btmakemetafile "$TRACKER" \
		--comment "Ubuntu CD releases.ubuntu.com" \
		"$RELEASE_SIMPLE_DIST/$basestatus.iso" >/dev/null
done

md5sum_directory () {
	echo "MD5summing $1 ..."
	rm -f "$2/MD5SUMS"
	(cd "$2" && md5sum * > MD5SUMS)
}

md5sum_directory 'full tree' "$RELEASE_FULL"
md5sum_directory 'simple tree (pool)' "$RELEASE_SIMPLE_POOL"
md5sum_directory "simple tree ($DIST)" "$RELEASE_SIMPLE_DIST"

echo "Done! Remember to sync-mirrors after checking that everything is OK."
