#! /usr/bin/python

# Copyright (C) 2012 Canonical Ltd.
# Author: Colin Watson <cjwatson@ubuntu.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""Print a manifest of a tree."""

from __future__ import print_function

from optparse import OptionParser
import os
import stat
import sys

sys.path.insert(0, os.path.join(sys.path[0], os.pardir, "lib"))
from cdimage.config import config
from cdimage.tree import DailyTree, SimpleReleaseTree


tree_classes = {
    "simple": SimpleReleaseTree,
    "daily": DailyTree,
}


def main():
    parser = OptionParser("%prog {simple|daily} DIRECTORY [FILE]")
    options, args = parser.parse_args()
    if len(args) < 1 or args[0] not in tree_classes:
        parser.error("need {simple|daily}")
    elif len(args) < 2:
        parser.error("need directory")
    if len(args) >= 3:
        path = os.path.join(args[1], args[2])
        output = open("%s.new" % path, "w")
        output_fd = output.fileno()
        os.fchmod(output_fd, os.fstat(output_fd).st_mode | stat.S_IWGRP)
    else:
        path = None
        output = sys.stdout
    try:
        for line in tree_classes[args[0]](config, args[1]).manifest():
            print(line, file=output)
    finally:
        if path is not None:
            output.close()
    if path is not None:
        os.rename("%s.new" % path, path)


if __name__ == "__main__":
    main()
